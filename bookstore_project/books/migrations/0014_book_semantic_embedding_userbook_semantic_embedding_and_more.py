# Generated by Django 4.2.1 on 2025-10-31 16:14

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("books", "0013_paymentevent_alter_order_status"),
    ]

    operations = [
        migrations.AddField(
            model_name="book",
            name="semantic_embedding",
            field=models.JSONField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="userbook",
            name="semantic_embedding",
            field=models.JSONField(blank=True, null=True),
        ),
        migrations.CreateModel(
            name="BookRecommendation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "score",
                    models.FloatField(
                        default=0.0,
                        validators=[
                            django.core.validators.MinValueValidator(0.0),
                            django.core.validators.MaxValueValidator(1.0),
                        ],
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "book",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="books.book"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-score"],
                "unique_together": {("user", "book")},
            },
        ),
    ]
